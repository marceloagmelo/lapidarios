/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.lapidarios.loja.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.model.AttachedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.WorkflowedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.trash.model.TrashEntry;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the Loja service. Represents a row in the &quot;loja&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link br.com.prodevelopment.lapidarios.loja.model.impl.LojaModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link br.com.prodevelopment.lapidarios.loja.model.impl.LojaImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see Loja
 * @see br.com.prodevelopment.lapidarios.loja.model.impl.LojaImpl
 * @see br.com.prodevelopment.lapidarios.loja.model.impl.LojaModelImpl
 * @generated
 */
public interface LojaModel extends AttachedModel, BaseModel<Loja>, StagedModel,
	TrashedModel, WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a loja model instance should use the {@link Loja} interface instead.
	 */

	/**
	 * Returns the primary key of this loja.
	 *
	 * @return the primary key of this loja
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this loja.
	 *
	 * @param primaryKey the primary key of this loja
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this loja.
	 *
	 * @return the uuid of this loja
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this loja.
	 *
	 * @param uuid the uuid of this loja
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the loja ID of this loja.
	 *
	 * @return the loja ID of this loja
	 */
	public long getLojaId();

	/**
	 * Sets the loja ID of this loja.
	 *
	 * @param lojaId the loja ID of this loja
	 */
	public void setLojaId(long lojaId);

	/**
	 * Returns the company ID of this loja.
	 *
	 * @return the company ID of this loja
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this loja.
	 *
	 * @param companyId the company ID of this loja
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this loja.
	 *
	 * @return the group ID of this loja
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this loja.
	 *
	 * @param groupId the group ID of this loja
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the create user ID of this loja.
	 *
	 * @return the create user ID of this loja
	 */
	public long getCreateUserId();

	/**
	 * Sets the create user ID of this loja.
	 *
	 * @param createUserId the create user ID of this loja
	 */
	public void setCreateUserId(long createUserId);

	/**
	 * Returns the create user uuid of this loja.
	 *
	 * @return the create user uuid of this loja
	 * @throws SystemException if a system exception occurred
	 */
	public String getCreateUserUuid() throws SystemException;

	/**
	 * Sets the create user uuid of this loja.
	 *
	 * @param createUserUuid the create user uuid of this loja
	 */
	public void setCreateUserUuid(String createUserUuid);

	/**
	 * Returns the modified user ID of this loja.
	 *
	 * @return the modified user ID of this loja
	 */
	public long getModifiedUserId();

	/**
	 * Sets the modified user ID of this loja.
	 *
	 * @param modifiedUserId the modified user ID of this loja
	 */
	public void setModifiedUserId(long modifiedUserId);

	/**
	 * Returns the modified user uuid of this loja.
	 *
	 * @return the modified user uuid of this loja
	 * @throws SystemException if a system exception occurred
	 */
	public String getModifiedUserUuid() throws SystemException;

	/**
	 * Sets the modified user uuid of this loja.
	 *
	 * @param modifiedUserUuid the modified user uuid of this loja
	 */
	public void setModifiedUserUuid(String modifiedUserUuid);

	/**
	 * Returns the create date of this loja.
	 *
	 * @return the create date of this loja
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this loja.
	 *
	 * @param createDate the create date of this loja
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this loja.
	 *
	 * @return the modified date of this loja
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this loja.
	 *
	 * @param modifiedDate the modified date of this loja
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the razao social of this loja.
	 *
	 * @return the razao social of this loja
	 */
	@AutoEscape
	public String getRazaoSocial();

	/**
	 * Sets the razao social of this loja.
	 *
	 * @param razaoSocial the razao social of this loja
	 */
	public void setRazaoSocial(String razaoSocial);

	/**
	 * Returns the nome fantasia of this loja.
	 *
	 * @return the nome fantasia of this loja
	 */
	@AutoEscape
	public String getNomeFantasia();

	/**
	 * Sets the nome fantasia of this loja.
	 *
	 * @param nomeFantasia the nome fantasia of this loja
	 */
	public void setNomeFantasia(String nomeFantasia);

	/**
	 * Returns the observacao of this loja.
	 *
	 * @return the observacao of this loja
	 */
	public String getObservacao();

	/**
	 * Returns the localized observacao of this loja in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized observacao of this loja
	 */
	@AutoEscape
	public String getObservacao(Locale locale);

	/**
	 * Returns the localized observacao of this loja in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized observacao of this loja. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getObservacao(Locale locale, boolean useDefault);

	/**
	 * Returns the localized observacao of this loja in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized observacao of this loja
	 */
	@AutoEscape
	public String getObservacao(String languageId);

	/**
	 * Returns the localized observacao of this loja in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized observacao of this loja
	 */
	@AutoEscape
	public String getObservacao(String languageId, boolean useDefault);

	@AutoEscape
	public String getObservacaoCurrentLanguageId();

	@AutoEscape
	public String getObservacaoCurrentValue();

	/**
	 * Returns a map of the locales and localized observacaos of this loja.
	 *
	 * @return the locales and localized observacaos of this loja
	 */
	public Map<Locale, String> getObservacaoMap();

	/**
	 * Sets the observacao of this loja.
	 *
	 * @param observacao the observacao of this loja
	 */
	public void setObservacao(String observacao);

	/**
	 * Sets the localized observacao of this loja in the language.
	 *
	 * @param observacao the localized observacao of this loja
	 * @param locale the locale of the language
	 */
	public void setObservacao(String observacao, Locale locale);

	/**
	 * Sets the localized observacao of this loja in the language, and sets the default locale.
	 *
	 * @param observacao the localized observacao of this loja
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setObservacao(String observacao, Locale locale,
		Locale defaultLocale);

	public void setObservacaoCurrentLanguageId(String languageId);

	/**
	 * Sets the localized observacaos of this loja from the map of locales and localized observacaos.
	 *
	 * @param observacaoMap the locales and localized observacaos of this loja
	 */
	public void setObservacaoMap(Map<Locale, String> observacaoMap);

	/**
	 * Sets the localized observacaos of this loja from the map of locales and localized observacaos, and sets the default locale.
	 *
	 * @param observacaoMap the locales and localized observacaos of this loja
	 * @param defaultLocale the default locale
	 */
	public void setObservacaoMap(Map<Locale, String> observacaoMap,
		Locale defaultLocale);

	/**
	 * Returns the cnpj of this loja.
	 *
	 * @return the cnpj of this loja
	 */
	@AutoEscape
	public String getCnpj();

	/**
	 * Sets the cnpj of this loja.
	 *
	 * @param cnpj the cnpj of this loja
	 */
	public void setCnpj(String cnpj);

	/**
	 * Returns the end logradouro of this loja.
	 *
	 * @return the end logradouro of this loja
	 */
	@AutoEscape
	public String getEndLogradouro();

	/**
	 * Sets the end logradouro of this loja.
	 *
	 * @param endLogradouro the end logradouro of this loja
	 */
	public void setEndLogradouro(String endLogradouro);

	/**
	 * Returns the end numero of this loja.
	 *
	 * @return the end numero of this loja
	 */
	@AutoEscape
	public String getEndNumero();

	/**
	 * Sets the end numero of this loja.
	 *
	 * @param endNumero the end numero of this loja
	 */
	public void setEndNumero(String endNumero);

	/**
	 * Returns the end complemento of this loja.
	 *
	 * @return the end complemento of this loja
	 */
	@AutoEscape
	public String getEndComplemento();

	/**
	 * Sets the end complemento of this loja.
	 *
	 * @param endComplemento the end complemento of this loja
	 */
	public void setEndComplemento(String endComplemento);

	/**
	 * Returns the end cep of this loja.
	 *
	 * @return the end cep of this loja
	 */
	@AutoEscape
	public String getEndCep();

	/**
	 * Sets the end cep of this loja.
	 *
	 * @param endCep the end cep of this loja
	 */
	public void setEndCep(String endCep);

	/**
	 * Returns the end bairro of this loja.
	 *
	 * @return the end bairro of this loja
	 */
	@AutoEscape
	public String getEndBairro();

	/**
	 * Sets the end bairro of this loja.
	 *
	 * @param endBairro the end bairro of this loja
	 */
	public void setEndBairro(String endBairro);

	/**
	 * Returns the end cidade of this loja.
	 *
	 * @return the end cidade of this loja
	 */
	@AutoEscape
	public String getEndCidade();

	/**
	 * Sets the end cidade of this loja.
	 *
	 * @param endCidade the end cidade of this loja
	 */
	public void setEndCidade(String endCidade);

	/**
	 * Returns the end uf of this loja.
	 *
	 * @return the end uf of this loja
	 */
	@AutoEscape
	public String getEndUf();

	/**
	 * Sets the end uf of this loja.
	 *
	 * @param endUf the end uf of this loja
	 */
	public void setEndUf(String endUf);

	/**
	 * Returns the end pais of this loja.
	 *
	 * @return the end pais of this loja
	 */
	@AutoEscape
	public String getEndPais();

	/**
	 * Sets the end pais of this loja.
	 *
	 * @param endPais the end pais of this loja
	 */
	public void setEndPais(String endPais);

	/**
	 * Returns the versao of this loja.
	 *
	 * @return the versao of this loja
	 */
	public double getVersao();

	/**
	 * Sets the versao of this loja.
	 *
	 * @param versao the versao of this loja
	 */
	public void setVersao(double versao);

	/**
	 * Returns the ordem indicada of this loja.
	 *
	 * @return the ordem indicada of this loja
	 */
	public int getOrdemIndicada();

	/**
	 * Sets the ordem indicada of this loja.
	 *
	 * @param ordemIndicada the ordem indicada of this loja
	 */
	public void setOrdemIndicada(int ordemIndicada);

	/**
	 * Returns the ordem indicada atual of this loja.
	 *
	 * @return the ordem indicada atual of this loja
	 */
	public boolean getOrdemIndicadaAtual();

	/**
	 * Returns <code>true</code> if this loja is ordem indicada atual.
	 *
	 * @return <code>true</code> if this loja is ordem indicada atual; <code>false</code> otherwise
	 */
	public boolean isOrdemIndicadaAtual();

	/**
	 * Sets whether this loja is ordem indicada atual.
	 *
	 * @param ordemIndicadaAtual the ordem indicada atual of this loja
	 */
	public void setOrdemIndicadaAtual(boolean ordemIndicadaAtual);

	/**
	 * Returns the status of this loja.
	 *
	 * @return the status of this loja
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this loja.
	 *
	 * @param status the status of this loja
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this loja.
	 *
	 * @return the status by user ID of this loja
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this loja.
	 *
	 * @param statusByUserId the status by user ID of this loja
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this loja.
	 *
	 * @return the status by user uuid of this loja
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this loja.
	 *
	 * @param statusByUserUuid the status by user uuid of this loja
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this loja.
	 *
	 * @return the status by user name of this loja
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this loja.
	 *
	 * @param statusByUserName the status by user name of this loja
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this loja.
	 *
	 * @return the status date of this loja
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this loja.
	 *
	 * @param statusDate the status date of this loja
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the fully qualified class name of this loja.
	 *
	 * @return the fully qualified class name of this loja
	 */
	@Override
	public String getClassName();

	public void setClassName(String className);

	/**
	 * Returns the class name ID of this loja.
	 *
	 * @return the class name ID of this loja
	 */
	@Override
	public long getClassNameId();

	/**
	 * Sets the class name ID of this loja.
	 *
	 * @param classNameId the class name ID of this loja
	 */
	@Override
	public void setClassNameId(long classNameId);

	/**
	 * Returns the class p k of this loja.
	 *
	 * @return the class p k of this loja
	 */
	@Override
	public long getClassPK();

	/**
	 * Sets the class p k of this loja.
	 *
	 * @param classPK the class p k of this loja
	 */
	@Override
	public void setClassPK(long classPK);

	/**
	 * Returns the trash entry created when this loja was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this loja.
	 *
	 * @return the trash entry created when this loja was moved to the Recycle Bin
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException;

	/**
	 * Returns the class primary key of the trash entry for this loja.
	 *
	 * @return the class primary key of the trash entry for this loja
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this loja.
	 *
	 * @return the trash handler for this loja
	 */
	@Override
	public TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this loja is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this loja is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this loja is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this loja is in the Recycle Bin; <code>false</code> otherwise
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public boolean isInTrashContainer();

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved()}
	 */
	@Override
	public boolean getApproved();

	/**
	 * Returns <code>true</code> if this loja is approved.
	 *
	 * @return <code>true</code> if this loja is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this loja is denied.
	 *
	 * @return <code>true</code> if this loja is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this loja is a draft.
	 *
	 * @return <code>true</code> if this loja is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this loja is expired.
	 *
	 * @return <code>true</code> if this loja is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this loja is inactive.
	 *
	 * @return <code>true</code> if this loja is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this loja is incomplete.
	 *
	 * @return <code>true</code> if this loja is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this loja is pending.
	 *
	 * @return <code>true</code> if this loja is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this loja is scheduled.
	 *
	 * @return <code>true</code> if this loja is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(br.com.prodevelopment.lapidarios.loja.model.Loja loja);

	@Override
	public int hashCode();

	@Override
	public CacheModel<br.com.prodevelopment.lapidarios.loja.model.Loja> toCacheModel();

	@Override
	public br.com.prodevelopment.lapidarios.loja.model.Loja toEscapedModel();

	@Override
	public br.com.prodevelopment.lapidarios.loja.model.Loja toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}