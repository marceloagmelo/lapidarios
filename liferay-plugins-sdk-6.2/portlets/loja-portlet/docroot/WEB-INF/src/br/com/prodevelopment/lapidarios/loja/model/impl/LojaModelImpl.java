/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.lapidarios.loja.model.impl;

import br.com.prodevelopment.lapidarios.loja.model.Loja;
import br.com.prodevelopment.lapidarios.loja.model.LojaModel;
import br.com.prodevelopment.lapidarios.loja.model.LojaSoap;

import com.liferay.portal.LocaleException;
import com.liferay.portal.NoSuchModelException;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.ContainerModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.service.TrashEntryLocalServiceUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

/**
 * The base model implementation for the Loja service. Represents a row in the &quot;loja&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.lapidarios.loja.model.LojaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LojaImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see LojaImpl
 * @see br.com.prodevelopment.lapidarios.loja.model.Loja
 * @see br.com.prodevelopment.lapidarios.loja.model.LojaModel
 * @generated
 */
@JSON(strict = true)
public class LojaModelImpl extends BaseModelImpl<Loja> implements LojaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a loja model instance should use the {@link br.com.prodevelopment.lapidarios.loja.model.Loja} interface instead.
	 */
	public static final String TABLE_NAME = "loja";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "lojaId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "modifiedUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "razaoSocial", Types.VARCHAR },
			{ "nomeFantasia", Types.VARCHAR },
			{ "observacao", Types.VARCHAR },
			{ "cnpj", Types.VARCHAR },
			{ "endLogradouro", Types.VARCHAR },
			{ "endNumero", Types.VARCHAR },
			{ "endComplemento", Types.VARCHAR },
			{ "endCep", Types.VARCHAR },
			{ "endBairro", Types.VARCHAR },
			{ "endCidade", Types.VARCHAR },
			{ "endUf", Types.VARCHAR },
			{ "endPais", Types.VARCHAR },
			{ "versao", Types.DOUBLE },
			{ "ordemIndicada", Types.INTEGER },
			{ "ordemIndicadaAtual", Types.BOOLEAN },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP },
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table loja (uuid_ VARCHAR(75) null,lojaId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,modifiedUserId LONG,createDate DATE null,modifiedDate DATE null,razaoSocial VARCHAR(200) null,nomeFantasia VARCHAR(100) null,observacao STRING null,cnpj VARCHAR(75) null,endLogradouro VARCHAR(100) null,endNumero VARCHAR(75) null,endComplemento VARCHAR(75) null,endCep VARCHAR(75) null,endBairro VARCHAR(75) null,endCidade VARCHAR(75) null,endUf VARCHAR(2) null,endPais VARCHAR(75) null,versao DOUBLE,ordemIndicada INTEGER,ordemIndicadaAtual BOOLEAN,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,classNameId LONG,classPK LONG)";
	public static final String TABLE_SQL_DROP = "drop table loja";
	public static final String ORDER_BY_JPQL = " ORDER BY loja.nomeFantasia ASC";
	public static final String ORDER_BY_SQL = " ORDER BY loja.nomeFantasia ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.lapidarios.loja.model.Loja"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.lapidarios.loja.model.Loja"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.lapidarios.loja.model.Loja"),
			true);
	public static long CLASSNAMEID_COLUMN_BITMASK = 1L;
	public static long CNPJ_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long NOMEFANTASIA_COLUMN_BITMASK = 16L;
	public static long ORDEMINDICADA_COLUMN_BITMASK = 32L;
	public static long ORDEMINDICADAATUAL_COLUMN_BITMASK = 64L;
	public static long RAZAOSOCIAL_COLUMN_BITMASK = 128L;
	public static long STATUS_COLUMN_BITMASK = 256L;
	public static long UUID_COLUMN_BITMASK = 512L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Loja toModel(LojaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Loja model = new LojaImpl();

		model.setUuid(soapModel.getUuid());
		model.setLojaId(soapModel.getLojaId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setRazaoSocial(soapModel.getRazaoSocial());
		model.setNomeFantasia(soapModel.getNomeFantasia());
		model.setObservacao(soapModel.getObservacao());
		model.setCnpj(soapModel.getCnpj());
		model.setEndLogradouro(soapModel.getEndLogradouro());
		model.setEndNumero(soapModel.getEndNumero());
		model.setEndComplemento(soapModel.getEndComplemento());
		model.setEndCep(soapModel.getEndCep());
		model.setEndBairro(soapModel.getEndBairro());
		model.setEndCidade(soapModel.getEndCidade());
		model.setEndUf(soapModel.getEndUf());
		model.setEndPais(soapModel.getEndPais());
		model.setVersao(soapModel.getVersao());
		model.setOrdemIndicada(soapModel.getOrdemIndicada());
		model.setOrdemIndicadaAtual(soapModel.getOrdemIndicadaAtual());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());
		model.setClassNameId(soapModel.getClassNameId());
		model.setClassPK(soapModel.getClassPK());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Loja> toModels(LojaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Loja> models = new ArrayList<Loja>(soapModels.length);

		for (LojaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.lapidarios.loja.model.Loja"));

	public LojaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lojaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLojaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lojaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Loja.class;
	}

	@Override
	public String getModelClassName() {
		return Loja.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("lojaId", getLojaId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("razaoSocial", getRazaoSocial());
		attributes.put("nomeFantasia", getNomeFantasia());
		attributes.put("observacao", getObservacao());
		attributes.put("cnpj", getCnpj());
		attributes.put("endLogradouro", getEndLogradouro());
		attributes.put("endNumero", getEndNumero());
		attributes.put("endComplemento", getEndComplemento());
		attributes.put("endCep", getEndCep());
		attributes.put("endBairro", getEndBairro());
		attributes.put("endCidade", getEndCidade());
		attributes.put("endUf", getEndUf());
		attributes.put("endPais", getEndPais());
		attributes.put("versao", getVersao());
		attributes.put("ordemIndicada", getOrdemIndicada());
		attributes.put("ordemIndicadaAtual", getOrdemIndicadaAtual());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());
		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long lojaId = (Long)attributes.get("lojaId");

		if (lojaId != null) {
			setLojaId(lojaId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String razaoSocial = (String)attributes.get("razaoSocial");

		if (razaoSocial != null) {
			setRazaoSocial(razaoSocial);
		}

		String nomeFantasia = (String)attributes.get("nomeFantasia");

		if (nomeFantasia != null) {
			setNomeFantasia(nomeFantasia);
		}

		String observacao = (String)attributes.get("observacao");

		if (observacao != null) {
			setObservacao(observacao);
		}

		String cnpj = (String)attributes.get("cnpj");

		if (cnpj != null) {
			setCnpj(cnpj);
		}

		String endLogradouro = (String)attributes.get("endLogradouro");

		if (endLogradouro != null) {
			setEndLogradouro(endLogradouro);
		}

		String endNumero = (String)attributes.get("endNumero");

		if (endNumero != null) {
			setEndNumero(endNumero);
		}

		String endComplemento = (String)attributes.get("endComplemento");

		if (endComplemento != null) {
			setEndComplemento(endComplemento);
		}

		String endCep = (String)attributes.get("endCep");

		if (endCep != null) {
			setEndCep(endCep);
		}

		String endBairro = (String)attributes.get("endBairro");

		if (endBairro != null) {
			setEndBairro(endBairro);
		}

		String endCidade = (String)attributes.get("endCidade");

		if (endCidade != null) {
			setEndCidade(endCidade);
		}

		String endUf = (String)attributes.get("endUf");

		if (endUf != null) {
			setEndUf(endUf);
		}

		String endPais = (String)attributes.get("endPais");

		if (endPais != null) {
			setEndPais(endPais);
		}

		Double versao = (Double)attributes.get("versao");

		if (versao != null) {
			setVersao(versao);
		}

		Integer ordemIndicada = (Integer)attributes.get("ordemIndicada");

		if (ordemIndicada != null) {
			setOrdemIndicada(ordemIndicada);
		}

		Boolean ordemIndicadaAtual = (Boolean)attributes.get(
				"ordemIndicadaAtual");

		if (ordemIndicadaAtual != null) {
			setOrdemIndicadaAtual(ordemIndicadaAtual);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}

		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getLojaId() {
		return _lojaId;
	}

	@Override
	public void setLojaId(long lojaId) {
		_lojaId = lojaId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getRazaoSocial() {
		if (_razaoSocial == null) {
			return StringPool.BLANK;
		}
		else {
			return _razaoSocial;
		}
	}

	@Override
	public void setRazaoSocial(String razaoSocial) {
		_columnBitmask |= RAZAOSOCIAL_COLUMN_BITMASK;

		if (_originalRazaoSocial == null) {
			_originalRazaoSocial = _razaoSocial;
		}

		_razaoSocial = razaoSocial;
	}

	public String getOriginalRazaoSocial() {
		return GetterUtil.getString(_originalRazaoSocial);
	}

	@JSON
	@Override
	public String getNomeFantasia() {
		if (_nomeFantasia == null) {
			return StringPool.BLANK;
		}
		else {
			return _nomeFantasia;
		}
	}

	@Override
	public void setNomeFantasia(String nomeFantasia) {
		_columnBitmask = -1L;

		if (_originalNomeFantasia == null) {
			_originalNomeFantasia = _nomeFantasia;
		}

		_nomeFantasia = nomeFantasia;
	}

	public String getOriginalNomeFantasia() {
		return GetterUtil.getString(_originalNomeFantasia);
	}

	@JSON
	@Override
	public String getObservacao() {
		if (_observacao == null) {
			return StringPool.BLANK;
		}
		else {
			return _observacao;
		}
	}

	@Override
	public String getObservacao(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getObservacao(languageId);
	}

	@Override
	public String getObservacao(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getObservacao(languageId, useDefault);
	}

	@Override
	public String getObservacao(String languageId) {
		return LocalizationUtil.getLocalization(getObservacao(), languageId);
	}

	@Override
	public String getObservacao(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(getObservacao(), languageId,
			useDefault);
	}

	@Override
	public String getObservacaoCurrentLanguageId() {
		return _observacaoCurrentLanguageId;
	}

	@JSON
	@Override
	public String getObservacaoCurrentValue() {
		Locale locale = getLocale(_observacaoCurrentLanguageId);

		return getObservacao(locale);
	}

	@Override
	public Map<Locale, String> getObservacaoMap() {
		return LocalizationUtil.getLocalizationMap(getObservacao());
	}

	@Override
	public void setObservacao(String observacao) {
		_observacao = observacao;
	}

	@Override
	public void setObservacao(String observacao, Locale locale) {
		setObservacao(observacao, locale, LocaleUtil.getDefault());
	}

	@Override
	public void setObservacao(String observacao, Locale locale,
		Locale defaultLocale) {
		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(observacao)) {
			setObservacao(LocalizationUtil.updateLocalization(getObservacao(),
					"Observacao", observacao, languageId, defaultLanguageId));
		}
		else {
			setObservacao(LocalizationUtil.removeLocalization(getObservacao(),
					"Observacao", languageId));
		}
	}

	@Override
	public void setObservacaoCurrentLanguageId(String languageId) {
		_observacaoCurrentLanguageId = languageId;
	}

	@Override
	public void setObservacaoMap(Map<Locale, String> observacaoMap) {
		setObservacaoMap(observacaoMap, LocaleUtil.getDefault());
	}

	@Override
	public void setObservacaoMap(Map<Locale, String> observacaoMap,
		Locale defaultLocale) {
		if (observacaoMap == null) {
			return;
		}

		setObservacao(LocalizationUtil.updateLocalization(observacaoMap,
				getObservacao(), "Observacao",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public String getCnpj() {
		if (_cnpj == null) {
			return StringPool.BLANK;
		}
		else {
			return _cnpj;
		}
	}

	@Override
	public void setCnpj(String cnpj) {
		_columnBitmask |= CNPJ_COLUMN_BITMASK;

		if (_originalCnpj == null) {
			_originalCnpj = _cnpj;
		}

		_cnpj = cnpj;
	}

	public String getOriginalCnpj() {
		return GetterUtil.getString(_originalCnpj);
	}

	@JSON
	@Override
	public String getEndLogradouro() {
		if (_endLogradouro == null) {
			return StringPool.BLANK;
		}
		else {
			return _endLogradouro;
		}
	}

	@Override
	public void setEndLogradouro(String endLogradouro) {
		_endLogradouro = endLogradouro;
	}

	@JSON
	@Override
	public String getEndNumero() {
		if (_endNumero == null) {
			return StringPool.BLANK;
		}
		else {
			return _endNumero;
		}
	}

	@Override
	public void setEndNumero(String endNumero) {
		_endNumero = endNumero;
	}

	@JSON
	@Override
	public String getEndComplemento() {
		if (_endComplemento == null) {
			return StringPool.BLANK;
		}
		else {
			return _endComplemento;
		}
	}

	@Override
	public void setEndComplemento(String endComplemento) {
		_endComplemento = endComplemento;
	}

	@JSON
	@Override
	public String getEndCep() {
		if (_endCep == null) {
			return StringPool.BLANK;
		}
		else {
			return _endCep;
		}
	}

	@Override
	public void setEndCep(String endCep) {
		_endCep = endCep;
	}

	@JSON
	@Override
	public String getEndBairro() {
		if (_endBairro == null) {
			return StringPool.BLANK;
		}
		else {
			return _endBairro;
		}
	}

	@Override
	public void setEndBairro(String endBairro) {
		_endBairro = endBairro;
	}

	@JSON
	@Override
	public String getEndCidade() {
		if (_endCidade == null) {
			return StringPool.BLANK;
		}
		else {
			return _endCidade;
		}
	}

	@Override
	public void setEndCidade(String endCidade) {
		_endCidade = endCidade;
	}

	@JSON
	@Override
	public String getEndUf() {
		if (_endUf == null) {
			return StringPool.BLANK;
		}
		else {
			return _endUf;
		}
	}

	@Override
	public void setEndUf(String endUf) {
		_endUf = endUf;
	}

	@JSON
	@Override
	public String getEndPais() {
		if (_endPais == null) {
			return StringPool.BLANK;
		}
		else {
			return _endPais;
		}
	}

	@Override
	public void setEndPais(String endPais) {
		_endPais = endPais;
	}

	@JSON
	@Override
	public double getVersao() {
		return _versao;
	}

	@Override
	public void setVersao(double versao) {
		_versao = versao;
	}

	@JSON
	@Override
	public int getOrdemIndicada() {
		return _ordemIndicada;
	}

	@Override
	public void setOrdemIndicada(int ordemIndicada) {
		_columnBitmask |= ORDEMINDICADA_COLUMN_BITMASK;

		if (!_setOriginalOrdemIndicada) {
			_setOriginalOrdemIndicada = true;

			_originalOrdemIndicada = _ordemIndicada;
		}

		_ordemIndicada = ordemIndicada;
	}

	public int getOriginalOrdemIndicada() {
		return _originalOrdemIndicada;
	}

	@JSON
	@Override
	public boolean getOrdemIndicadaAtual() {
		return _ordemIndicadaAtual;
	}

	@Override
	public boolean isOrdemIndicadaAtual() {
		return _ordemIndicadaAtual;
	}

	@Override
	public void setOrdemIndicadaAtual(boolean ordemIndicadaAtual) {
		_columnBitmask |= ORDEMINDICADAATUAL_COLUMN_BITMASK;

		if (!_setOriginalOrdemIndicadaAtual) {
			_setOriginalOrdemIndicadaAtual = true;

			_originalOrdemIndicadaAtual = _ordemIndicadaAtual;
		}

		_ordemIndicadaAtual = ordemIndicadaAtual;
	}

	public boolean getOriginalOrdemIndicadaAtual() {
		return _originalOrdemIndicadaAtual;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
			_statusByUserUuid);
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
		_statusByUserUuid = statusByUserUuid;
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return StringPool.BLANK;
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@JSON
	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_classPK = classPK;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Loja.class.getName()), getClassNameId());
	}

	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException {
		if (!isInTrash()) {
			return null;
		}

		TrashEntry trashEntry = TrashEntryLocalServiceUtil.fetchEntry(getModelClassName(),
				getTrashEntryClassPK());

		if (trashEntry != null) {
			return trashEntry;
		}

		TrashHandler trashHandler = getTrashHandler();

		if (!Validator.isNull(trashHandler.getContainerModelClassName())) {
			ContainerModel containerModel = null;

			try {
				containerModel = trashHandler.getParentContainerModel(this);
			}
			catch (NoSuchModelException nsme) {
				return null;
			}

			while (containerModel != null) {
				if (containerModel instanceof TrashedModel) {
					TrashedModel trashedModel = (TrashedModel)containerModel;

					return trashedModel.getTrashEntry();
				}

				trashHandler = TrashHandlerRegistryUtil.getTrashHandler(trashHandler.getContainerModelClassName());

				if (trashHandler == null) {
					return null;
				}

				containerModel = trashHandler.getContainerModel(containerModel.getParentContainerModelId());
			}
		}

		return null;
	}

	@Override
	public long getTrashEntryClassPK() {
		return getPrimaryKey();
	}

	@Override
	public TrashHandler getTrashHandler() {
		return TrashHandlerRegistryUtil.getTrashHandler(getModelClassName());
	}

	@Override
	public boolean isInTrash() {
		if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInTrashContainer() {
		TrashHandler trashHandler = getTrashHandler();

		if ((trashHandler == null) ||
				Validator.isNull(trashHandler.getContainerModelClassName())) {
			return false;
		}

		try {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			if (containerModel == null) {
				return false;
			}

			if (containerModel instanceof TrashedModel) {
				return ((TrashedModel)containerModel).isInTrash();
			}
		}
		catch (Exception e) {
		}

		return false;
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved}
	 */
	@Override
	public boolean getApproved() {
		return isApproved();
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Loja.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public String[] getAvailableLanguageIds() {
		Set<String> availableLanguageIds = new TreeSet<String>();

		Map<Locale, String> observacaoMap = getObservacaoMap();

		for (Map.Entry<Locale, String> entry : observacaoMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		return availableLanguageIds.toArray(new String[availableLanguageIds.size()]);
	}

	@Override
	public String getDefaultLanguageId() {
		String xml = getObservacao();

		if (xml == null) {
			return StringPool.BLANK;
		}

		Locale defaultLocale = LocaleUtil.getDefault();

		return LocalizationUtil.getDefaultLanguageId(xml, defaultLocale);
	}

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException {
		prepareLocalizedFieldsForImport(null);
	}

	@Override
	@SuppressWarnings("unused")
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException {
		Locale defaultLocale = LocaleUtil.getDefault();

		String modelDefaultLanguageId = getDefaultLanguageId();

		String observacao = getObservacao(defaultLocale);

		if (Validator.isNull(observacao)) {
			setObservacao(getObservacao(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setObservacao(getObservacao(defaultLocale), defaultLocale,
				defaultLocale);
		}
	}

	@Override
	public Loja toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Loja)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LojaImpl lojaImpl = new LojaImpl();

		lojaImpl.setUuid(getUuid());
		lojaImpl.setLojaId(getLojaId());
		lojaImpl.setCompanyId(getCompanyId());
		lojaImpl.setGroupId(getGroupId());
		lojaImpl.setCreateUserId(getCreateUserId());
		lojaImpl.setModifiedUserId(getModifiedUserId());
		lojaImpl.setCreateDate(getCreateDate());
		lojaImpl.setModifiedDate(getModifiedDate());
		lojaImpl.setRazaoSocial(getRazaoSocial());
		lojaImpl.setNomeFantasia(getNomeFantasia());
		lojaImpl.setObservacao(getObservacao());
		lojaImpl.setCnpj(getCnpj());
		lojaImpl.setEndLogradouro(getEndLogradouro());
		lojaImpl.setEndNumero(getEndNumero());
		lojaImpl.setEndComplemento(getEndComplemento());
		lojaImpl.setEndCep(getEndCep());
		lojaImpl.setEndBairro(getEndBairro());
		lojaImpl.setEndCidade(getEndCidade());
		lojaImpl.setEndUf(getEndUf());
		lojaImpl.setEndPais(getEndPais());
		lojaImpl.setVersao(getVersao());
		lojaImpl.setOrdemIndicada(getOrdemIndicada());
		lojaImpl.setOrdemIndicadaAtual(getOrdemIndicadaAtual());
		lojaImpl.setStatus(getStatus());
		lojaImpl.setStatusByUserId(getStatusByUserId());
		lojaImpl.setStatusByUserName(getStatusByUserName());
		lojaImpl.setStatusDate(getStatusDate());
		lojaImpl.setClassNameId(getClassNameId());
		lojaImpl.setClassPK(getClassPK());

		lojaImpl.resetOriginalValues();

		return lojaImpl;
	}

	@Override
	public int compareTo(Loja loja) {
		int value = 0;

		value = getNomeFantasia().compareTo(loja.getNomeFantasia());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Loja)) {
			return false;
		}

		Loja loja = (Loja)obj;

		long primaryKey = loja.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LojaModelImpl lojaModelImpl = this;

		lojaModelImpl._originalUuid = lojaModelImpl._uuid;

		lojaModelImpl._originalCompanyId = lojaModelImpl._companyId;

		lojaModelImpl._setOriginalCompanyId = false;

		lojaModelImpl._originalGroupId = lojaModelImpl._groupId;

		lojaModelImpl._setOriginalGroupId = false;

		lojaModelImpl._originalRazaoSocial = lojaModelImpl._razaoSocial;

		lojaModelImpl._originalNomeFantasia = lojaModelImpl._nomeFantasia;

		lojaModelImpl._originalCnpj = lojaModelImpl._cnpj;

		lojaModelImpl._originalOrdemIndicada = lojaModelImpl._ordemIndicada;

		lojaModelImpl._setOriginalOrdemIndicada = false;

		lojaModelImpl._originalOrdemIndicadaAtual = lojaModelImpl._ordemIndicadaAtual;

		lojaModelImpl._setOriginalOrdemIndicadaAtual = false;

		lojaModelImpl._originalStatus = lojaModelImpl._status;

		lojaModelImpl._setOriginalStatus = false;

		lojaModelImpl._originalClassNameId = lojaModelImpl._classNameId;

		lojaModelImpl._setOriginalClassNameId = false;

		lojaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Loja> toCacheModel() {
		LojaCacheModel lojaCacheModel = new LojaCacheModel();

		lojaCacheModel.uuid = getUuid();

		String uuid = lojaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			lojaCacheModel.uuid = null;
		}

		lojaCacheModel.lojaId = getLojaId();

		lojaCacheModel.companyId = getCompanyId();

		lojaCacheModel.groupId = getGroupId();

		lojaCacheModel.createUserId = getCreateUserId();

		lojaCacheModel.modifiedUserId = getModifiedUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			lojaCacheModel.createDate = createDate.getTime();
		}
		else {
			lojaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			lojaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			lojaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		lojaCacheModel.razaoSocial = getRazaoSocial();

		String razaoSocial = lojaCacheModel.razaoSocial;

		if ((razaoSocial != null) && (razaoSocial.length() == 0)) {
			lojaCacheModel.razaoSocial = null;
		}

		lojaCacheModel.nomeFantasia = getNomeFantasia();

		String nomeFantasia = lojaCacheModel.nomeFantasia;

		if ((nomeFantasia != null) && (nomeFantasia.length() == 0)) {
			lojaCacheModel.nomeFantasia = null;
		}

		lojaCacheModel.observacao = getObservacao();

		String observacao = lojaCacheModel.observacao;

		if ((observacao != null) && (observacao.length() == 0)) {
			lojaCacheModel.observacao = null;
		}

		lojaCacheModel.cnpj = getCnpj();

		String cnpj = lojaCacheModel.cnpj;

		if ((cnpj != null) && (cnpj.length() == 0)) {
			lojaCacheModel.cnpj = null;
		}

		lojaCacheModel.endLogradouro = getEndLogradouro();

		String endLogradouro = lojaCacheModel.endLogradouro;

		if ((endLogradouro != null) && (endLogradouro.length() == 0)) {
			lojaCacheModel.endLogradouro = null;
		}

		lojaCacheModel.endNumero = getEndNumero();

		String endNumero = lojaCacheModel.endNumero;

		if ((endNumero != null) && (endNumero.length() == 0)) {
			lojaCacheModel.endNumero = null;
		}

		lojaCacheModel.endComplemento = getEndComplemento();

		String endComplemento = lojaCacheModel.endComplemento;

		if ((endComplemento != null) && (endComplemento.length() == 0)) {
			lojaCacheModel.endComplemento = null;
		}

		lojaCacheModel.endCep = getEndCep();

		String endCep = lojaCacheModel.endCep;

		if ((endCep != null) && (endCep.length() == 0)) {
			lojaCacheModel.endCep = null;
		}

		lojaCacheModel.endBairro = getEndBairro();

		String endBairro = lojaCacheModel.endBairro;

		if ((endBairro != null) && (endBairro.length() == 0)) {
			lojaCacheModel.endBairro = null;
		}

		lojaCacheModel.endCidade = getEndCidade();

		String endCidade = lojaCacheModel.endCidade;

		if ((endCidade != null) && (endCidade.length() == 0)) {
			lojaCacheModel.endCidade = null;
		}

		lojaCacheModel.endUf = getEndUf();

		String endUf = lojaCacheModel.endUf;

		if ((endUf != null) && (endUf.length() == 0)) {
			lojaCacheModel.endUf = null;
		}

		lojaCacheModel.endPais = getEndPais();

		String endPais = lojaCacheModel.endPais;

		if ((endPais != null) && (endPais.length() == 0)) {
			lojaCacheModel.endPais = null;
		}

		lojaCacheModel.versao = getVersao();

		lojaCacheModel.ordemIndicada = getOrdemIndicada();

		lojaCacheModel.ordemIndicadaAtual = getOrdemIndicadaAtual();

		lojaCacheModel.status = getStatus();

		lojaCacheModel.statusByUserId = getStatusByUserId();

		lojaCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = lojaCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			lojaCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			lojaCacheModel.statusDate = statusDate.getTime();
		}
		else {
			lojaCacheModel.statusDate = Long.MIN_VALUE;
		}

		lojaCacheModel.classNameId = getClassNameId();

		lojaCacheModel.classPK = getClassPK();

		return lojaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(59);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", lojaId=");
		sb.append(getLojaId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", razaoSocial=");
		sb.append(getRazaoSocial());
		sb.append(", nomeFantasia=");
		sb.append(getNomeFantasia());
		sb.append(", observacao=");
		sb.append(getObservacao());
		sb.append(", cnpj=");
		sb.append(getCnpj());
		sb.append(", endLogradouro=");
		sb.append(getEndLogradouro());
		sb.append(", endNumero=");
		sb.append(getEndNumero());
		sb.append(", endComplemento=");
		sb.append(getEndComplemento());
		sb.append(", endCep=");
		sb.append(getEndCep());
		sb.append(", endBairro=");
		sb.append(getEndBairro());
		sb.append(", endCidade=");
		sb.append(getEndCidade());
		sb.append(", endUf=");
		sb.append(getEndUf());
		sb.append(", endPais=");
		sb.append(getEndPais());
		sb.append(", versao=");
		sb.append(getVersao());
		sb.append(", ordemIndicada=");
		sb.append(getOrdemIndicada());
		sb.append(", ordemIndicadaAtual=");
		sb.append(getOrdemIndicadaAtual());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append(", classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(91);

		sb.append("<model><model-name>");
		sb.append("br.com.prodevelopment.lapidarios.loja.model.Loja");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lojaId</column-name><column-value><![CDATA[");
		sb.append(getLojaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>razaoSocial</column-name><column-value><![CDATA[");
		sb.append(getRazaoSocial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nomeFantasia</column-name><column-value><![CDATA[");
		sb.append(getNomeFantasia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>observacao</column-name><column-value><![CDATA[");
		sb.append(getObservacao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cnpj</column-name><column-value><![CDATA[");
		sb.append(getCnpj());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endLogradouro</column-name><column-value><![CDATA[");
		sb.append(getEndLogradouro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endNumero</column-name><column-value><![CDATA[");
		sb.append(getEndNumero());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endComplemento</column-name><column-value><![CDATA[");
		sb.append(getEndComplemento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endCep</column-name><column-value><![CDATA[");
		sb.append(getEndCep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endBairro</column-name><column-value><![CDATA[");
		sb.append(getEndBairro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endCidade</column-name><column-value><![CDATA[");
		sb.append(getEndCidade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endUf</column-name><column-value><![CDATA[");
		sb.append(getEndUf());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endPais</column-name><column-value><![CDATA[");
		sb.append(getEndPais());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versao</column-name><column-value><![CDATA[");
		sb.append(getVersao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ordemIndicada</column-name><column-value><![CDATA[");
		sb.append(getOrdemIndicada());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ordemIndicadaAtual</column-name><column-value><![CDATA[");
		sb.append(getOrdemIndicadaAtual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Loja.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Loja.class };
	private String _uuid;
	private String _originalUuid;
	private long _lojaId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _razaoSocial;
	private String _originalRazaoSocial;
	private String _nomeFantasia;
	private String _originalNomeFantasia;
	private String _observacao;
	private String _observacaoCurrentLanguageId;
	private String _cnpj;
	private String _originalCnpj;
	private String _endLogradouro;
	private String _endNumero;
	private String _endComplemento;
	private String _endCep;
	private String _endBairro;
	private String _endCidade;
	private String _endUf;
	private String _endPais;
	private double _versao;
	private int _ordemIndicada;
	private int _originalOrdemIndicada;
	private boolean _setOriginalOrdemIndicada;
	private boolean _ordemIndicadaAtual;
	private boolean _originalOrdemIndicadaAtual;
	private boolean _setOriginalOrdemIndicadaAtual;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _statusByUserId;
	private String _statusByUserUuid;
	private String _statusByUserName;
	private Date _statusDate;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _columnBitmask;
	private Loja _escapedModel;
}