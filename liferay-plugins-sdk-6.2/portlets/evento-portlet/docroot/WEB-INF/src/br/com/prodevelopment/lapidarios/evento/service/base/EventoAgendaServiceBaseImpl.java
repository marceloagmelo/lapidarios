/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.lapidarios.evento.service.base;

import br.com.prodevelopment.lapidarios.evento.model.EventoAgenda;
import br.com.prodevelopment.lapidarios.evento.service.EventoAgendaService;
import br.com.prodevelopment.lapidarios.evento.service.persistence.EventoAgendaPersistence;
import br.com.prodevelopment.lapidarios.evento.service.persistence.EventoInscricaoPersistence;
import br.com.prodevelopment.lapidarios.evento.service.persistence.EventoNaoInscritoPersistence;
import br.com.prodevelopment.lapidarios.evento.service.persistence.EventoPersistence;
import br.com.prodevelopment.lapidarios.evento.service.persistence.LocalPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;
import com.liferay.portal.service.persistence.WorkflowInstanceLinkPersistence;

import com.liferay.portlet.trash.service.persistence.TrashEntryPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the evento agenda remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link br.com.prodevelopment.lapidarios.evento.service.impl.EventoAgendaServiceImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see br.com.prodevelopment.lapidarios.evento.service.impl.EventoAgendaServiceImpl
 * @see br.com.prodevelopment.lapidarios.evento.service.EventoAgendaServiceUtil
 * @generated
 */
public abstract class EventoAgendaServiceBaseImpl extends BaseServiceImpl
	implements EventoAgendaService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link br.com.prodevelopment.lapidarios.evento.service.EventoAgendaServiceUtil} to access the evento agenda remote service.
	 */

	/**
	 * Returns the evento local service.
	 *
	 * @return the evento local service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoLocalService getEventoLocalService() {
		return eventoLocalService;
	}

	/**
	 * Sets the evento local service.
	 *
	 * @param eventoLocalService the evento local service
	 */
	public void setEventoLocalService(
		br.com.prodevelopment.lapidarios.evento.service.EventoLocalService eventoLocalService) {
		this.eventoLocalService = eventoLocalService;
	}

	/**
	 * Returns the evento remote service.
	 *
	 * @return the evento remote service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoService getEventoService() {
		return eventoService;
	}

	/**
	 * Sets the evento remote service.
	 *
	 * @param eventoService the evento remote service
	 */
	public void setEventoService(
		br.com.prodevelopment.lapidarios.evento.service.EventoService eventoService) {
		this.eventoService = eventoService;
	}

	/**
	 * Returns the evento persistence.
	 *
	 * @return the evento persistence
	 */
	public EventoPersistence getEventoPersistence() {
		return eventoPersistence;
	}

	/**
	 * Sets the evento persistence.
	 *
	 * @param eventoPersistence the evento persistence
	 */
	public void setEventoPersistence(EventoPersistence eventoPersistence) {
		this.eventoPersistence = eventoPersistence;
	}

	/**
	 * Returns the evento agenda local service.
	 *
	 * @return the evento agenda local service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoAgendaLocalService getEventoAgendaLocalService() {
		return eventoAgendaLocalService;
	}

	/**
	 * Sets the evento agenda local service.
	 *
	 * @param eventoAgendaLocalService the evento agenda local service
	 */
	public void setEventoAgendaLocalService(
		br.com.prodevelopment.lapidarios.evento.service.EventoAgendaLocalService eventoAgendaLocalService) {
		this.eventoAgendaLocalService = eventoAgendaLocalService;
	}

	/**
	 * Returns the evento agenda remote service.
	 *
	 * @return the evento agenda remote service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoAgendaService getEventoAgendaService() {
		return eventoAgendaService;
	}

	/**
	 * Sets the evento agenda remote service.
	 *
	 * @param eventoAgendaService the evento agenda remote service
	 */
	public void setEventoAgendaService(
		br.com.prodevelopment.lapidarios.evento.service.EventoAgendaService eventoAgendaService) {
		this.eventoAgendaService = eventoAgendaService;
	}

	/**
	 * Returns the evento agenda persistence.
	 *
	 * @return the evento agenda persistence
	 */
	public EventoAgendaPersistence getEventoAgendaPersistence() {
		return eventoAgendaPersistence;
	}

	/**
	 * Sets the evento agenda persistence.
	 *
	 * @param eventoAgendaPersistence the evento agenda persistence
	 */
	public void setEventoAgendaPersistence(
		EventoAgendaPersistence eventoAgendaPersistence) {
		this.eventoAgendaPersistence = eventoAgendaPersistence;
	}

	/**
	 * Returns the evento inscricao local service.
	 *
	 * @return the evento inscricao local service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoLocalService getEventoInscricaoLocalService() {
		return eventoInscricaoLocalService;
	}

	/**
	 * Sets the evento inscricao local service.
	 *
	 * @param eventoInscricaoLocalService the evento inscricao local service
	 */
	public void setEventoInscricaoLocalService(
		br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoLocalService eventoInscricaoLocalService) {
		this.eventoInscricaoLocalService = eventoInscricaoLocalService;
	}

	/**
	 * Returns the evento inscricao remote service.
	 *
	 * @return the evento inscricao remote service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoService getEventoInscricaoService() {
		return eventoInscricaoService;
	}

	/**
	 * Sets the evento inscricao remote service.
	 *
	 * @param eventoInscricaoService the evento inscricao remote service
	 */
	public void setEventoInscricaoService(
		br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoService eventoInscricaoService) {
		this.eventoInscricaoService = eventoInscricaoService;
	}

	/**
	 * Returns the evento inscricao persistence.
	 *
	 * @return the evento inscricao persistence
	 */
	public EventoInscricaoPersistence getEventoInscricaoPersistence() {
		return eventoInscricaoPersistence;
	}

	/**
	 * Sets the evento inscricao persistence.
	 *
	 * @param eventoInscricaoPersistence the evento inscricao persistence
	 */
	public void setEventoInscricaoPersistence(
		EventoInscricaoPersistence eventoInscricaoPersistence) {
		this.eventoInscricaoPersistence = eventoInscricaoPersistence;
	}

	/**
	 * Returns the evento nao inscrito local service.
	 *
	 * @return the evento nao inscrito local service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoLocalService getEventoNaoInscritoLocalService() {
		return eventoNaoInscritoLocalService;
	}

	/**
	 * Sets the evento nao inscrito local service.
	 *
	 * @param eventoNaoInscritoLocalService the evento nao inscrito local service
	 */
	public void setEventoNaoInscritoLocalService(
		br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoLocalService eventoNaoInscritoLocalService) {
		this.eventoNaoInscritoLocalService = eventoNaoInscritoLocalService;
	}

	/**
	 * Returns the evento nao inscrito remote service.
	 *
	 * @return the evento nao inscrito remote service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoService getEventoNaoInscritoService() {
		return eventoNaoInscritoService;
	}

	/**
	 * Sets the evento nao inscrito remote service.
	 *
	 * @param eventoNaoInscritoService the evento nao inscrito remote service
	 */
	public void setEventoNaoInscritoService(
		br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoService eventoNaoInscritoService) {
		this.eventoNaoInscritoService = eventoNaoInscritoService;
	}

	/**
	 * Returns the evento nao inscrito persistence.
	 *
	 * @return the evento nao inscrito persistence
	 */
	public EventoNaoInscritoPersistence getEventoNaoInscritoPersistence() {
		return eventoNaoInscritoPersistence;
	}

	/**
	 * Sets the evento nao inscrito persistence.
	 *
	 * @param eventoNaoInscritoPersistence the evento nao inscrito persistence
	 */
	public void setEventoNaoInscritoPersistence(
		EventoNaoInscritoPersistence eventoNaoInscritoPersistence) {
		this.eventoNaoInscritoPersistence = eventoNaoInscritoPersistence;
	}

	/**
	 * Returns the local local service.
	 *
	 * @return the local local service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.LocalLocalService getLocalLocalService() {
		return localLocalService;
	}

	/**
	 * Sets the local local service.
	 *
	 * @param localLocalService the local local service
	 */
	public void setLocalLocalService(
		br.com.prodevelopment.lapidarios.evento.service.LocalLocalService localLocalService) {
		this.localLocalService = localLocalService;
	}

	/**
	 * Returns the local remote service.
	 *
	 * @return the local remote service
	 */
	public br.com.prodevelopment.lapidarios.evento.service.LocalService getLocalService() {
		return localService;
	}

	/**
	 * Sets the local remote service.
	 *
	 * @param localService the local remote service
	 */
	public void setLocalService(
		br.com.prodevelopment.lapidarios.evento.service.LocalService localService) {
		this.localService = localService;
	}

	/**
	 * Returns the local persistence.
	 *
	 * @return the local persistence
	 */
	public LocalPersistence getLocalPersistence() {
		return localPersistence;
	}

	/**
	 * Sets the local persistence.
	 *
	 * @param localPersistence the local persistence
	 */
	public void setLocalPersistence(LocalPersistence localPersistence) {
		this.localPersistence = localPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the workflow instance link local service.
	 *
	 * @return the workflow instance link local service
	 */
	public com.liferay.portal.service.WorkflowInstanceLinkLocalService getWorkflowInstanceLinkLocalService() {
		return workflowInstanceLinkLocalService;
	}

	/**
	 * Sets the workflow instance link local service.
	 *
	 * @param workflowInstanceLinkLocalService the workflow instance link local service
	 */
	public void setWorkflowInstanceLinkLocalService(
		com.liferay.portal.service.WorkflowInstanceLinkLocalService workflowInstanceLinkLocalService) {
		this.workflowInstanceLinkLocalService = workflowInstanceLinkLocalService;
	}

	/**
	 * Returns the workflow instance link persistence.
	 *
	 * @return the workflow instance link persistence
	 */
	public WorkflowInstanceLinkPersistence getWorkflowInstanceLinkPersistence() {
		return workflowInstanceLinkPersistence;
	}

	/**
	 * Sets the workflow instance link persistence.
	 *
	 * @param workflowInstanceLinkPersistence the workflow instance link persistence
	 */
	public void setWorkflowInstanceLinkPersistence(
		WorkflowInstanceLinkPersistence workflowInstanceLinkPersistence) {
		this.workflowInstanceLinkPersistence = workflowInstanceLinkPersistence;
	}

	/**
	 * Returns the trash entry local service.
	 *
	 * @return the trash entry local service
	 */
	public com.liferay.portlet.trash.service.TrashEntryLocalService getTrashEntryLocalService() {
		return trashEntryLocalService;
	}

	/**
	 * Sets the trash entry local service.
	 *
	 * @param trashEntryLocalService the trash entry local service
	 */
	public void setTrashEntryLocalService(
		com.liferay.portlet.trash.service.TrashEntryLocalService trashEntryLocalService) {
		this.trashEntryLocalService = trashEntryLocalService;
	}

	/**
	 * Returns the trash entry remote service.
	 *
	 * @return the trash entry remote service
	 */
	public com.liferay.portlet.trash.service.TrashEntryService getTrashEntryService() {
		return trashEntryService;
	}

	/**
	 * Sets the trash entry remote service.
	 *
	 * @param trashEntryService the trash entry remote service
	 */
	public void setTrashEntryService(
		com.liferay.portlet.trash.service.TrashEntryService trashEntryService) {
		this.trashEntryService = trashEntryService;
	}

	/**
	 * Returns the trash entry persistence.
	 *
	 * @return the trash entry persistence
	 */
	public TrashEntryPersistence getTrashEntryPersistence() {
		return trashEntryPersistence;
	}

	/**
	 * Sets the trash entry persistence.
	 *
	 * @param trashEntryPersistence the trash entry persistence
	 */
	public void setTrashEntryPersistence(
		TrashEntryPersistence trashEntryPersistence) {
		this.trashEntryPersistence = trashEntryPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return EventoAgenda.class;
	}

	protected String getModelClassName() {
		return EventoAgenda.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = eventoAgendaPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoLocalService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoLocalService eventoLocalService;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoService eventoService;
	@BeanReference(type = EventoPersistence.class)
	protected EventoPersistence eventoPersistence;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoAgendaLocalService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoAgendaLocalService eventoAgendaLocalService;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoAgendaService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoAgendaService eventoAgendaService;
	@BeanReference(type = EventoAgendaPersistence.class)
	protected EventoAgendaPersistence eventoAgendaPersistence;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoLocalService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoLocalService eventoInscricaoLocalService;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoInscricaoService eventoInscricaoService;
	@BeanReference(type = EventoInscricaoPersistence.class)
	protected EventoInscricaoPersistence eventoInscricaoPersistence;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoLocalService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoLocalService eventoNaoInscritoLocalService;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.EventoNaoInscritoService eventoNaoInscritoService;
	@BeanReference(type = EventoNaoInscritoPersistence.class)
	protected EventoNaoInscritoPersistence eventoNaoInscritoPersistence;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.LocalLocalService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.LocalLocalService localLocalService;
	@BeanReference(type = br.com.prodevelopment.lapidarios.evento.service.LocalService.class)
	protected br.com.prodevelopment.lapidarios.evento.service.LocalService localService;
	@BeanReference(type = LocalPersistence.class)
	protected LocalPersistence localPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = com.liferay.portal.service.WorkflowInstanceLinkLocalService.class)
	protected com.liferay.portal.service.WorkflowInstanceLinkLocalService workflowInstanceLinkLocalService;
	@BeanReference(type = WorkflowInstanceLinkPersistence.class)
	protected WorkflowInstanceLinkPersistence workflowInstanceLinkPersistence;
	@BeanReference(type = com.liferay.portlet.trash.service.TrashEntryLocalService.class)
	protected com.liferay.portlet.trash.service.TrashEntryLocalService trashEntryLocalService;
	@BeanReference(type = com.liferay.portlet.trash.service.TrashEntryService.class)
	protected com.liferay.portlet.trash.service.TrashEntryService trashEntryService;
	@BeanReference(type = TrashEntryPersistence.class)
	protected TrashEntryPersistence trashEntryPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private EventoAgendaServiceClpInvoker _clpInvoker = new EventoAgendaServiceClpInvoker();
}