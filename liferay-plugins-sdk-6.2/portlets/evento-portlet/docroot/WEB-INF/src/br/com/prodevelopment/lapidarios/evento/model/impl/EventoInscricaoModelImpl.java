/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.lapidarios.evento.model.impl;

import br.com.prodevelopment.lapidarios.evento.model.EventoInscricao;
import br.com.prodevelopment.lapidarios.evento.model.EventoInscricaoModel;
import br.com.prodevelopment.lapidarios.evento.model.EventoInscricaoSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EventoInscricao service. Represents a row in the &quot;evento_inscricao&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.lapidarios.evento.model.EventoInscricaoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EventoInscricaoImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see EventoInscricaoImpl
 * @see br.com.prodevelopment.lapidarios.evento.model.EventoInscricao
 * @see br.com.prodevelopment.lapidarios.evento.model.EventoInscricaoModel
 * @generated
 */
@JSON(strict = true)
public class EventoInscricaoModelImpl extends BaseModelImpl<EventoInscricao>
	implements EventoInscricaoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a evento inscricao model instance should use the {@link br.com.prodevelopment.lapidarios.evento.model.EventoInscricao} interface instead.
	 */
	public static final String TABLE_NAME = "evento_inscricao";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "eventoInscricaoId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "eventoAgendaId", Types.BIGINT },
			{ "eventoId", Types.BIGINT },
			{ "userNome", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table evento_inscricao (uuid_ VARCHAR(75) null,eventoInscricaoId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,createDate DATE null,eventoAgendaId LONG,eventoId LONG,userNome VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table evento_inscricao";
	public static final String ORDER_BY_JPQL = " ORDER BY eventoInscricao.eventoInscricaoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY evento_inscricao.eventoInscricaoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.lapidarios.evento.model.EventoInscricao"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.lapidarios.evento.model.EventoInscricao"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.lapidarios.evento.model.EventoInscricao"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long CREATEUSERID_COLUMN_BITMASK = 2L;
	public static long EVENTOAGENDAID_COLUMN_BITMASK = 4L;
	public static long EVENTOID_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long USERNOME_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;
	public static long EVENTOINSCRICAOID_COLUMN_BITMASK = 128L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EventoInscricao toModel(EventoInscricaoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EventoInscricao model = new EventoInscricaoImpl();

		model.setUuid(soapModel.getUuid());
		model.setEventoInscricaoId(soapModel.getEventoInscricaoId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setEventoAgendaId(soapModel.getEventoAgendaId());
		model.setEventoId(soapModel.getEventoId());
		model.setUserNome(soapModel.getUserNome());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EventoInscricao> toModels(
		EventoInscricaoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EventoInscricao> models = new ArrayList<EventoInscricao>(soapModels.length);

		for (EventoInscricaoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.lapidarios.evento.model.EventoInscricao"));

	public EventoInscricaoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _eventoInscricaoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEventoInscricaoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _eventoInscricaoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EventoInscricao.class;
	}

	@Override
	public String getModelClassName() {
		return EventoInscricao.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("eventoInscricaoId", getEventoInscricaoId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("eventoAgendaId", getEventoAgendaId());
		attributes.put("eventoId", getEventoId());
		attributes.put("userNome", getUserNome());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long eventoInscricaoId = (Long)attributes.get("eventoInscricaoId");

		if (eventoInscricaoId != null) {
			setEventoInscricaoId(eventoInscricaoId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long eventoAgendaId = (Long)attributes.get("eventoAgendaId");

		if (eventoAgendaId != null) {
			setEventoAgendaId(eventoAgendaId);
		}

		Long eventoId = (Long)attributes.get("eventoId");

		if (eventoId != null) {
			setEventoId(eventoId);
		}

		String userNome = (String)attributes.get("userNome");

		if (userNome != null) {
			setUserNome(userNome);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEventoInscricaoId() {
		return _eventoInscricaoId;
	}

	@Override
	public void setEventoInscricaoId(long eventoInscricaoId) {
		_columnBitmask = -1L;

		_eventoInscricaoId = eventoInscricaoId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_columnBitmask |= CREATEUSERID_COLUMN_BITMASK;

		if (!_setOriginalCreateUserId) {
			_setOriginalCreateUserId = true;

			_originalCreateUserId = _createUserId;
		}

		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	public long getOriginalCreateUserId() {
		return _originalCreateUserId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public long getEventoAgendaId() {
		return _eventoAgendaId;
	}

	@Override
	public void setEventoAgendaId(long eventoAgendaId) {
		_columnBitmask |= EVENTOAGENDAID_COLUMN_BITMASK;

		if (!_setOriginalEventoAgendaId) {
			_setOriginalEventoAgendaId = true;

			_originalEventoAgendaId = _eventoAgendaId;
		}

		_eventoAgendaId = eventoAgendaId;
	}

	public long getOriginalEventoAgendaId() {
		return _originalEventoAgendaId;
	}

	@JSON
	@Override
	public long getEventoId() {
		return _eventoId;
	}

	@Override
	public void setEventoId(long eventoId) {
		_columnBitmask |= EVENTOID_COLUMN_BITMASK;

		if (!_setOriginalEventoId) {
			_setOriginalEventoId = true;

			_originalEventoId = _eventoId;
		}

		_eventoId = eventoId;
	}

	public long getOriginalEventoId() {
		return _originalEventoId;
	}

	@JSON
	@Override
	public String getUserNome() {
		if (_userNome == null) {
			return StringPool.BLANK;
		}
		else {
			return _userNome;
		}
	}

	@Override
	public void setUserNome(String userNome) {
		_columnBitmask |= USERNOME_COLUMN_BITMASK;

		if (_originalUserNome == null) {
			_originalUserNome = _userNome;
		}

		_userNome = userNome;
	}

	public String getOriginalUserNome() {
		return GetterUtil.getString(_originalUserNome);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EventoInscricao.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EventoInscricao toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EventoInscricao)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EventoInscricaoImpl eventoInscricaoImpl = new EventoInscricaoImpl();

		eventoInscricaoImpl.setUuid(getUuid());
		eventoInscricaoImpl.setEventoInscricaoId(getEventoInscricaoId());
		eventoInscricaoImpl.setCompanyId(getCompanyId());
		eventoInscricaoImpl.setGroupId(getGroupId());
		eventoInscricaoImpl.setCreateUserId(getCreateUserId());
		eventoInscricaoImpl.setCreateDate(getCreateDate());
		eventoInscricaoImpl.setEventoAgendaId(getEventoAgendaId());
		eventoInscricaoImpl.setEventoId(getEventoId());
		eventoInscricaoImpl.setUserNome(getUserNome());

		eventoInscricaoImpl.resetOriginalValues();

		return eventoInscricaoImpl;
	}

	@Override
	public int compareTo(EventoInscricao eventoInscricao) {
		int value = 0;

		if (getEventoInscricaoId() < eventoInscricao.getEventoInscricaoId()) {
			value = -1;
		}
		else if (getEventoInscricaoId() > eventoInscricao.getEventoInscricaoId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EventoInscricao)) {
			return false;
		}

		EventoInscricao eventoInscricao = (EventoInscricao)obj;

		long primaryKey = eventoInscricao.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EventoInscricaoModelImpl eventoInscricaoModelImpl = this;

		eventoInscricaoModelImpl._originalUuid = eventoInscricaoModelImpl._uuid;

		eventoInscricaoModelImpl._originalCompanyId = eventoInscricaoModelImpl._companyId;

		eventoInscricaoModelImpl._setOriginalCompanyId = false;

		eventoInscricaoModelImpl._originalGroupId = eventoInscricaoModelImpl._groupId;

		eventoInscricaoModelImpl._setOriginalGroupId = false;

		eventoInscricaoModelImpl._originalCreateUserId = eventoInscricaoModelImpl._createUserId;

		eventoInscricaoModelImpl._setOriginalCreateUserId = false;

		eventoInscricaoModelImpl._originalEventoAgendaId = eventoInscricaoModelImpl._eventoAgendaId;

		eventoInscricaoModelImpl._setOriginalEventoAgendaId = false;

		eventoInscricaoModelImpl._originalEventoId = eventoInscricaoModelImpl._eventoId;

		eventoInscricaoModelImpl._setOriginalEventoId = false;

		eventoInscricaoModelImpl._originalUserNome = eventoInscricaoModelImpl._userNome;

		eventoInscricaoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EventoInscricao> toCacheModel() {
		EventoInscricaoCacheModel eventoInscricaoCacheModel = new EventoInscricaoCacheModel();

		eventoInscricaoCacheModel.uuid = getUuid();

		String uuid = eventoInscricaoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			eventoInscricaoCacheModel.uuid = null;
		}

		eventoInscricaoCacheModel.eventoInscricaoId = getEventoInscricaoId();

		eventoInscricaoCacheModel.companyId = getCompanyId();

		eventoInscricaoCacheModel.groupId = getGroupId();

		eventoInscricaoCacheModel.createUserId = getCreateUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			eventoInscricaoCacheModel.createDate = createDate.getTime();
		}
		else {
			eventoInscricaoCacheModel.createDate = Long.MIN_VALUE;
		}

		eventoInscricaoCacheModel.eventoAgendaId = getEventoAgendaId();

		eventoInscricaoCacheModel.eventoId = getEventoId();

		eventoInscricaoCacheModel.userNome = getUserNome();

		String userNome = eventoInscricaoCacheModel.userNome;

		if ((userNome != null) && (userNome.length() == 0)) {
			eventoInscricaoCacheModel.userNome = null;
		}

		return eventoInscricaoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", eventoInscricaoId=");
		sb.append(getEventoInscricaoId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", eventoAgendaId=");
		sb.append(getEventoAgendaId());
		sb.append(", eventoId=");
		sb.append(getEventoId());
		sb.append(", userNome=");
		sb.append(getUserNome());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append(
			"br.com.prodevelopment.lapidarios.evento.model.EventoInscricao");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventoInscricaoId</column-name><column-value><![CDATA[");
		sb.append(getEventoInscricaoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventoAgendaId</column-name><column-value><![CDATA[");
		sb.append(getEventoAgendaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventoId</column-name><column-value><![CDATA[");
		sb.append(getEventoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userNome</column-name><column-value><![CDATA[");
		sb.append(getUserNome());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EventoInscricao.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EventoInscricao.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _eventoInscricaoId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _originalCreateUserId;
	private boolean _setOriginalCreateUserId;
	private Date _createDate;
	private long _eventoAgendaId;
	private long _originalEventoAgendaId;
	private boolean _setOriginalEventoAgendaId;
	private long _eventoId;
	private long _originalEventoId;
	private boolean _setOriginalEventoId;
	private String _userNome;
	private String _originalUserNome;
	private long _columnBitmask;
	private EventoInscricao _escapedModel;
}