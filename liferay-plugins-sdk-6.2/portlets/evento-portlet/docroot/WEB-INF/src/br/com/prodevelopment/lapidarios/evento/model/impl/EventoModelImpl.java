/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.lapidarios.evento.model.impl;

import br.com.prodevelopment.lapidarios.evento.model.Evento;
import br.com.prodevelopment.lapidarios.evento.model.EventoModel;
import br.com.prodevelopment.lapidarios.evento.model.EventoSoap;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

/**
 * The base model implementation for the Evento service. Represents a row in the &quot;evento&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.lapidarios.evento.model.EventoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EventoImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see EventoImpl
 * @see br.com.prodevelopment.lapidarios.evento.model.Evento
 * @see br.com.prodevelopment.lapidarios.evento.model.EventoModel
 * @generated
 */
@JSON(strict = true)
public class EventoModelImpl extends BaseModelImpl<Evento>
	implements EventoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a evento model instance should use the {@link br.com.prodevelopment.lapidarios.evento.model.Evento} interface instead.
	 */
	public static final String TABLE_NAME = "evento";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "eventoId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "modifiedUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "nome", Types.VARCHAR },
			{ "descricao", Types.VARCHAR },
			{ "userResponsavelId", Types.BIGINT },
			{ "userResponsavelNome", Types.VARCHAR },
			{ "versao", Types.DOUBLE },
			{ "imagemId", Types.BIGINT },
			{ "articleId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table evento (uuid_ VARCHAR(75) null,eventoId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,modifiedUserId LONG,createDate DATE null,modifiedDate DATE null,nome STRING null,descricao STRING null,userResponsavelId LONG,userResponsavelNome VARCHAR(75) null,versao DOUBLE,imagemId LONG,articleId LONG)";
	public static final String TABLE_SQL_DROP = "drop table evento";
	public static final String ORDER_BY_JPQL = " ORDER BY evento.nome ASC";
	public static final String ORDER_BY_SQL = " ORDER BY evento.nome ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.lapidarios.evento.model.Evento"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.lapidarios.evento.model.Evento"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.lapidarios.evento.model.Evento"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long NOME_COLUMN_BITMASK = 4L;
	public static long USERRESPONSAVELID_COLUMN_BITMASK = 8L;
	public static long USERRESPONSAVELNOME_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Evento toModel(EventoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Evento model = new EventoImpl();

		model.setUuid(soapModel.getUuid());
		model.setEventoId(soapModel.getEventoId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setNome(soapModel.getNome());
		model.setDescricao(soapModel.getDescricao());
		model.setUserResponsavelId(soapModel.getUserResponsavelId());
		model.setUserResponsavelNome(soapModel.getUserResponsavelNome());
		model.setVersao(soapModel.getVersao());
		model.setImagemId(soapModel.getImagemId());
		model.setArticleId(soapModel.getArticleId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Evento> toModels(EventoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Evento> models = new ArrayList<Evento>(soapModels.length);

		for (EventoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.lapidarios.evento.model.Evento"));

	public EventoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _eventoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEventoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _eventoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Evento.class;
	}

	@Override
	public String getModelClassName() {
		return Evento.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("eventoId", getEventoId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("nome", getNome());
		attributes.put("descricao", getDescricao());
		attributes.put("userResponsavelId", getUserResponsavelId());
		attributes.put("userResponsavelNome", getUserResponsavelNome());
		attributes.put("versao", getVersao());
		attributes.put("imagemId", getImagemId());
		attributes.put("articleId", getArticleId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long eventoId = (Long)attributes.get("eventoId");

		if (eventoId != null) {
			setEventoId(eventoId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String nome = (String)attributes.get("nome");

		if (nome != null) {
			setNome(nome);
		}

		String descricao = (String)attributes.get("descricao");

		if (descricao != null) {
			setDescricao(descricao);
		}

		Long userResponsavelId = (Long)attributes.get("userResponsavelId");

		if (userResponsavelId != null) {
			setUserResponsavelId(userResponsavelId);
		}

		String userResponsavelNome = (String)attributes.get(
				"userResponsavelNome");

		if (userResponsavelNome != null) {
			setUserResponsavelNome(userResponsavelNome);
		}

		Double versao = (Double)attributes.get("versao");

		if (versao != null) {
			setVersao(versao);
		}

		Long imagemId = (Long)attributes.get("imagemId");

		if (imagemId != null) {
			setImagemId(imagemId);
		}

		Long articleId = (Long)attributes.get("articleId");

		if (articleId != null) {
			setArticleId(articleId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEventoId() {
		return _eventoId;
	}

	@Override
	public void setEventoId(long eventoId) {
		_eventoId = eventoId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNome() {
		if (_nome == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome;
		}
	}

	@Override
	public String getNome(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getNome(languageId);
	}

	@Override
	public String getNome(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getNome(languageId, useDefault);
	}

	@Override
	public String getNome(String languageId) {
		return LocalizationUtil.getLocalization(getNome(), languageId);
	}

	@Override
	public String getNome(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(getNome(), languageId,
			useDefault);
	}

	@Override
	public String getNomeCurrentLanguageId() {
		return _nomeCurrentLanguageId;
	}

	@JSON
	@Override
	public String getNomeCurrentValue() {
		Locale locale = getLocale(_nomeCurrentLanguageId);

		return getNome(locale);
	}

	@Override
	public Map<Locale, String> getNomeMap() {
		return LocalizationUtil.getLocalizationMap(getNome());
	}

	@Override
	public void setNome(String nome) {
		_columnBitmask = -1L;

		if (_originalNome == null) {
			_originalNome = _nome;
		}

		_nome = nome;
	}

	@Override
	public void setNome(String nome, Locale locale) {
		setNome(nome, locale, LocaleUtil.getDefault());
	}

	@Override
	public void setNome(String nome, Locale locale, Locale defaultLocale) {
		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(nome)) {
			setNome(LocalizationUtil.updateLocalization(getNome(), "Nome",
					nome, languageId, defaultLanguageId));
		}
		else {
			setNome(LocalizationUtil.removeLocalization(getNome(), "Nome",
					languageId));
		}
	}

	@Override
	public void setNomeCurrentLanguageId(String languageId) {
		_nomeCurrentLanguageId = languageId;
	}

	@Override
	public void setNomeMap(Map<Locale, String> nomeMap) {
		setNomeMap(nomeMap, LocaleUtil.getDefault());
	}

	@Override
	public void setNomeMap(Map<Locale, String> nomeMap, Locale defaultLocale) {
		if (nomeMap == null) {
			return;
		}

		setNome(LocalizationUtil.updateLocalization(nomeMap, getNome(), "Nome",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	public String getOriginalNome() {
		return GetterUtil.getString(_originalNome);
	}

	@JSON
	@Override
	public String getDescricao() {
		if (_descricao == null) {
			return StringPool.BLANK;
		}
		else {
			return _descricao;
		}
	}

	@Override
	public String getDescricao(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getDescricao(languageId);
	}

	@Override
	public String getDescricao(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getDescricao(languageId, useDefault);
	}

	@Override
	public String getDescricao(String languageId) {
		return LocalizationUtil.getLocalization(getDescricao(), languageId);
	}

	@Override
	public String getDescricao(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(getDescricao(), languageId,
			useDefault);
	}

	@Override
	public String getDescricaoCurrentLanguageId() {
		return _descricaoCurrentLanguageId;
	}

	@JSON
	@Override
	public String getDescricaoCurrentValue() {
		Locale locale = getLocale(_descricaoCurrentLanguageId);

		return getDescricao(locale);
	}

	@Override
	public Map<Locale, String> getDescricaoMap() {
		return LocalizationUtil.getLocalizationMap(getDescricao());
	}

	@Override
	public void setDescricao(String descricao) {
		_descricao = descricao;
	}

	@Override
	public void setDescricao(String descricao, Locale locale) {
		setDescricao(descricao, locale, LocaleUtil.getDefault());
	}

	@Override
	public void setDescricao(String descricao, Locale locale,
		Locale defaultLocale) {
		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(descricao)) {
			setDescricao(LocalizationUtil.updateLocalization(getDescricao(),
					"Descricao", descricao, languageId, defaultLanguageId));
		}
		else {
			setDescricao(LocalizationUtil.removeLocalization(getDescricao(),
					"Descricao", languageId));
		}
	}

	@Override
	public void setDescricaoCurrentLanguageId(String languageId) {
		_descricaoCurrentLanguageId = languageId;
	}

	@Override
	public void setDescricaoMap(Map<Locale, String> descricaoMap) {
		setDescricaoMap(descricaoMap, LocaleUtil.getDefault());
	}

	@Override
	public void setDescricaoMap(Map<Locale, String> descricaoMap,
		Locale defaultLocale) {
		if (descricaoMap == null) {
			return;
		}

		setDescricao(LocalizationUtil.updateLocalization(descricaoMap,
				getDescricao(), "Descricao",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public long getUserResponsavelId() {
		return _userResponsavelId;
	}

	@Override
	public void setUserResponsavelId(long userResponsavelId) {
		_columnBitmask |= USERRESPONSAVELID_COLUMN_BITMASK;

		if (!_setOriginalUserResponsavelId) {
			_setOriginalUserResponsavelId = true;

			_originalUserResponsavelId = _userResponsavelId;
		}

		_userResponsavelId = userResponsavelId;
	}

	public long getOriginalUserResponsavelId() {
		return _originalUserResponsavelId;
	}

	@JSON
	@Override
	public String getUserResponsavelNome() {
		if (_userResponsavelNome == null) {
			return StringPool.BLANK;
		}
		else {
			return _userResponsavelNome;
		}
	}

	@Override
	public void setUserResponsavelNome(String userResponsavelNome) {
		_columnBitmask |= USERRESPONSAVELNOME_COLUMN_BITMASK;

		if (_originalUserResponsavelNome == null) {
			_originalUserResponsavelNome = _userResponsavelNome;
		}

		_userResponsavelNome = userResponsavelNome;
	}

	public String getOriginalUserResponsavelNome() {
		return GetterUtil.getString(_originalUserResponsavelNome);
	}

	@JSON
	@Override
	public double getVersao() {
		return _versao;
	}

	@Override
	public void setVersao(double versao) {
		_versao = versao;
	}

	@JSON
	@Override
	public long getImagemId() {
		return _imagemId;
	}

	@Override
	public void setImagemId(long imagemId) {
		_imagemId = imagemId;
	}

	@JSON
	@Override
	public long getArticleId() {
		return _articleId;
	}

	@Override
	public void setArticleId(long articleId) {
		_articleId = articleId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Evento.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Evento.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public String[] getAvailableLanguageIds() {
		Set<String> availableLanguageIds = new TreeSet<String>();

		Map<Locale, String> nomeMap = getNomeMap();

		for (Map.Entry<Locale, String> entry : nomeMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		Map<Locale, String> descricaoMap = getDescricaoMap();

		for (Map.Entry<Locale, String> entry : descricaoMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		return availableLanguageIds.toArray(new String[availableLanguageIds.size()]);
	}

	@Override
	public String getDefaultLanguageId() {
		String xml = getNome();

		if (xml == null) {
			return StringPool.BLANK;
		}

		Locale defaultLocale = LocaleUtil.getDefault();

		return LocalizationUtil.getDefaultLanguageId(xml, defaultLocale);
	}

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException {
		prepareLocalizedFieldsForImport(null);
	}

	@Override
	@SuppressWarnings("unused")
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException {
		Locale defaultLocale = LocaleUtil.getDefault();

		String modelDefaultLanguageId = getDefaultLanguageId();

		String nome = getNome(defaultLocale);

		if (Validator.isNull(nome)) {
			setNome(getNome(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setNome(getNome(defaultLocale), defaultLocale, defaultLocale);
		}

		String descricao = getDescricao(defaultLocale);

		if (Validator.isNull(descricao)) {
			setDescricao(getDescricao(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setDescricao(getDescricao(defaultLocale), defaultLocale,
				defaultLocale);
		}
	}

	@Override
	public Evento toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Evento)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EventoImpl eventoImpl = new EventoImpl();

		eventoImpl.setUuid(getUuid());
		eventoImpl.setEventoId(getEventoId());
		eventoImpl.setCompanyId(getCompanyId());
		eventoImpl.setGroupId(getGroupId());
		eventoImpl.setCreateUserId(getCreateUserId());
		eventoImpl.setModifiedUserId(getModifiedUserId());
		eventoImpl.setCreateDate(getCreateDate());
		eventoImpl.setModifiedDate(getModifiedDate());
		eventoImpl.setNome(getNome());
		eventoImpl.setDescricao(getDescricao());
		eventoImpl.setUserResponsavelId(getUserResponsavelId());
		eventoImpl.setUserResponsavelNome(getUserResponsavelNome());
		eventoImpl.setVersao(getVersao());
		eventoImpl.setImagemId(getImagemId());
		eventoImpl.setArticleId(getArticleId());

		eventoImpl.resetOriginalValues();

		return eventoImpl;
	}

	@Override
	public int compareTo(Evento evento) {
		int value = 0;

		value = getNome().compareTo(evento.getNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Evento)) {
			return false;
		}

		Evento evento = (Evento)obj;

		long primaryKey = evento.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EventoModelImpl eventoModelImpl = this;

		eventoModelImpl._originalUuid = eventoModelImpl._uuid;

		eventoModelImpl._originalCompanyId = eventoModelImpl._companyId;

		eventoModelImpl._setOriginalCompanyId = false;

		eventoModelImpl._originalGroupId = eventoModelImpl._groupId;

		eventoModelImpl._setOriginalGroupId = false;

		eventoModelImpl._originalNome = eventoModelImpl._nome;

		eventoModelImpl._originalUserResponsavelId = eventoModelImpl._userResponsavelId;

		eventoModelImpl._setOriginalUserResponsavelId = false;

		eventoModelImpl._originalUserResponsavelNome = eventoModelImpl._userResponsavelNome;

		eventoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Evento> toCacheModel() {
		EventoCacheModel eventoCacheModel = new EventoCacheModel();

		eventoCacheModel.uuid = getUuid();

		String uuid = eventoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			eventoCacheModel.uuid = null;
		}

		eventoCacheModel.eventoId = getEventoId();

		eventoCacheModel.companyId = getCompanyId();

		eventoCacheModel.groupId = getGroupId();

		eventoCacheModel.createUserId = getCreateUserId();

		eventoCacheModel.modifiedUserId = getModifiedUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			eventoCacheModel.createDate = createDate.getTime();
		}
		else {
			eventoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			eventoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			eventoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		eventoCacheModel.nome = getNome();

		String nome = eventoCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			eventoCacheModel.nome = null;
		}

		eventoCacheModel.descricao = getDescricao();

		String descricao = eventoCacheModel.descricao;

		if ((descricao != null) && (descricao.length() == 0)) {
			eventoCacheModel.descricao = null;
		}

		eventoCacheModel.userResponsavelId = getUserResponsavelId();

		eventoCacheModel.userResponsavelNome = getUserResponsavelNome();

		String userResponsavelNome = eventoCacheModel.userResponsavelNome;

		if ((userResponsavelNome != null) &&
				(userResponsavelNome.length() == 0)) {
			eventoCacheModel.userResponsavelNome = null;
		}

		eventoCacheModel.versao = getVersao();

		eventoCacheModel.imagemId = getImagemId();

		eventoCacheModel.articleId = getArticleId();

		return eventoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", eventoId=");
		sb.append(getEventoId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", nome=");
		sb.append(getNome());
		sb.append(", descricao=");
		sb.append(getDescricao());
		sb.append(", userResponsavelId=");
		sb.append(getUserResponsavelId());
		sb.append(", userResponsavelNome=");
		sb.append(getUserResponsavelNome());
		sb.append(", versao=");
		sb.append(getVersao());
		sb.append(", imagemId=");
		sb.append(getImagemId());
		sb.append(", articleId=");
		sb.append(getArticleId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("br.com.prodevelopment.lapidarios.evento.model.Evento");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventoId</column-name><column-value><![CDATA[");
		sb.append(getEventoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome</column-name><column-value><![CDATA[");
		sb.append(getNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descricao</column-name><column-value><![CDATA[");
		sb.append(getDescricao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userResponsavelId</column-name><column-value><![CDATA[");
		sb.append(getUserResponsavelId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userResponsavelNome</column-name><column-value><![CDATA[");
		sb.append(getUserResponsavelNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versao</column-name><column-value><![CDATA[");
		sb.append(getVersao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imagemId</column-name><column-value><![CDATA[");
		sb.append(getImagemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleId</column-name><column-value><![CDATA[");
		sb.append(getArticleId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Evento.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Evento.class };
	private String _uuid;
	private String _originalUuid;
	private long _eventoId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _nome;
	private String _nomeCurrentLanguageId;
	private String _originalNome;
	private String _descricao;
	private String _descricaoCurrentLanguageId;
	private long _userResponsavelId;
	private long _originalUserResponsavelId;
	private boolean _setOriginalUserResponsavelId;
	private String _userResponsavelNome;
	private String _originalUserResponsavelNome;
	private double _versao;
	private long _imagemId;
	private long _articleId;
	private long _columnBitmask;
	private Evento _escapedModel;
}