/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.lapidarios.lojaindicada.model.impl;

import br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada;
import br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicadaModel;
import br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicadaSoap;

import com.liferay.portal.NoSuchModelException;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.ContainerModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.service.TrashEntryLocalServiceUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LojaIndicada service. Represents a row in the &quot;loja_indicada&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicadaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LojaIndicadaImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see LojaIndicadaImpl
 * @see br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada
 * @see br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicadaModel
 * @generated
 */
@JSON(strict = true)
public class LojaIndicadaModelImpl extends BaseModelImpl<LojaIndicada>
	implements LojaIndicadaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a loja indicada model instance should use the {@link br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada} interface instead.
	 */
	public static final String TABLE_NAME = "loja_indicada";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "lojaIndicadaId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "modifiedUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "idLoja", Types.VARCHAR },
			{ "lojaIndicadaAtual", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table loja_indicada (uuid_ VARCHAR(75) null,lojaIndicadaId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,modifiedUserId LONG,createDate DATE null,modifiedDate DATE null,idLoja VARCHAR(75) null,lojaIndicadaAtual BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table loja_indicada";
	public static final String ORDER_BY_JPQL = " ORDER BY lojaIndicada.lojaIndicadaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY loja_indicada.lojaIndicadaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long IDLOJA_COLUMN_BITMASK = 4L;
	public static long LOJAINDICADAATUAL_COLUMN_BITMASK = 8L;
	public static long UUID_COLUMN_BITMASK = 16L;
	public static long LOJAINDICADAID_COLUMN_BITMASK = 32L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LojaIndicada toModel(LojaIndicadaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LojaIndicada model = new LojaIndicadaImpl();

		model.setUuid(soapModel.getUuid());
		model.setLojaIndicadaId(soapModel.getLojaIndicadaId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setIdLoja(soapModel.getIdLoja());
		model.setLojaIndicadaAtual(soapModel.getLojaIndicadaAtual());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LojaIndicada> toModels(LojaIndicadaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LojaIndicada> models = new ArrayList<LojaIndicada>(soapModels.length);

		for (LojaIndicadaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada"));

	public LojaIndicadaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lojaIndicadaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLojaIndicadaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lojaIndicadaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LojaIndicada.class;
	}

	@Override
	public String getModelClassName() {
		return LojaIndicada.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("lojaIndicadaId", getLojaIndicadaId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("idLoja", getIdLoja());
		attributes.put("lojaIndicadaAtual", getLojaIndicadaAtual());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long lojaIndicadaId = (Long)attributes.get("lojaIndicadaId");

		if (lojaIndicadaId != null) {
			setLojaIndicadaId(lojaIndicadaId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String idLoja = (String)attributes.get("idLoja");

		if (idLoja != null) {
			setIdLoja(idLoja);
		}

		Boolean lojaIndicadaAtual = (Boolean)attributes.get("lojaIndicadaAtual");

		if (lojaIndicadaAtual != null) {
			setLojaIndicadaAtual(lojaIndicadaAtual);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getLojaIndicadaId() {
		return _lojaIndicadaId;
	}

	@Override
	public void setLojaIndicadaId(long lojaIndicadaId) {
		_columnBitmask = -1L;

		_lojaIndicadaId = lojaIndicadaId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getIdLoja() {
		if (_idLoja == null) {
			return StringPool.BLANK;
		}
		else {
			return _idLoja;
		}
	}

	@Override
	public void setIdLoja(String idLoja) {
		_columnBitmask |= IDLOJA_COLUMN_BITMASK;

		if (_originalIdLoja == null) {
			_originalIdLoja = _idLoja;
		}

		_idLoja = idLoja;
	}

	public String getOriginalIdLoja() {
		return GetterUtil.getString(_originalIdLoja);
	}

	@JSON
	@Override
	public Boolean getLojaIndicadaAtual() {
		return _lojaIndicadaAtual;
	}

	@Override
	public void setLojaIndicadaAtual(Boolean lojaIndicadaAtual) {
		_columnBitmask |= LOJAINDICADAATUAL_COLUMN_BITMASK;

		if (!_setOriginalLojaIndicadaAtual) {
			_setOriginalLojaIndicadaAtual = true;

			_originalLojaIndicadaAtual = _lojaIndicadaAtual;
		}

		_lojaIndicadaAtual = lojaIndicadaAtual;
	}

	public Boolean getOriginalLojaIndicadaAtual() {
		return _originalLojaIndicadaAtual;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				LojaIndicada.class.getName()));
	}

	@Override
	public int getStatus() {
		return 0;
	}

	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException {
		if (!isInTrash()) {
			return null;
		}

		TrashEntry trashEntry = TrashEntryLocalServiceUtil.fetchEntry(getModelClassName(),
				getTrashEntryClassPK());

		if (trashEntry != null) {
			return trashEntry;
		}

		TrashHandler trashHandler = getTrashHandler();

		if (!Validator.isNull(trashHandler.getContainerModelClassName())) {
			ContainerModel containerModel = null;

			try {
				containerModel = trashHandler.getParentContainerModel(this);
			}
			catch (NoSuchModelException nsme) {
				return null;
			}

			while (containerModel != null) {
				if (containerModel instanceof TrashedModel) {
					TrashedModel trashedModel = (TrashedModel)containerModel;

					return trashedModel.getTrashEntry();
				}

				trashHandler = TrashHandlerRegistryUtil.getTrashHandler(trashHandler.getContainerModelClassName());

				if (trashHandler == null) {
					return null;
				}

				containerModel = trashHandler.getContainerModel(containerModel.getParentContainerModelId());
			}
		}

		return null;
	}

	@Override
	public long getTrashEntryClassPK() {
		return getPrimaryKey();
	}

	@Override
	public TrashHandler getTrashHandler() {
		return TrashHandlerRegistryUtil.getTrashHandler(getModelClassName());
	}

	@Override
	public boolean isInTrash() {
		if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInTrashContainer() {
		TrashHandler trashHandler = getTrashHandler();

		if ((trashHandler == null) ||
				Validator.isNull(trashHandler.getContainerModelClassName())) {
			return false;
		}

		try {
			ContainerModel containerModel = trashHandler.getParentContainerModel(this);

			if (containerModel == null) {
				return false;
			}

			if (containerModel instanceof TrashedModel) {
				return ((TrashedModel)containerModel).isInTrash();
			}
		}
		catch (Exception e) {
		}

		return false;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LojaIndicada.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LojaIndicada toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LojaIndicada)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LojaIndicadaImpl lojaIndicadaImpl = new LojaIndicadaImpl();

		lojaIndicadaImpl.setUuid(getUuid());
		lojaIndicadaImpl.setLojaIndicadaId(getLojaIndicadaId());
		lojaIndicadaImpl.setCompanyId(getCompanyId());
		lojaIndicadaImpl.setGroupId(getGroupId());
		lojaIndicadaImpl.setCreateUserId(getCreateUserId());
		lojaIndicadaImpl.setModifiedUserId(getModifiedUserId());
		lojaIndicadaImpl.setCreateDate(getCreateDate());
		lojaIndicadaImpl.setModifiedDate(getModifiedDate());
		lojaIndicadaImpl.setIdLoja(getIdLoja());
		lojaIndicadaImpl.setLojaIndicadaAtual(getLojaIndicadaAtual());

		lojaIndicadaImpl.resetOriginalValues();

		return lojaIndicadaImpl;
	}

	@Override
	public int compareTo(LojaIndicada lojaIndicada) {
		int value = 0;

		if (getLojaIndicadaId() < lojaIndicada.getLojaIndicadaId()) {
			value = -1;
		}
		else if (getLojaIndicadaId() > lojaIndicada.getLojaIndicadaId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LojaIndicada)) {
			return false;
		}

		LojaIndicada lojaIndicada = (LojaIndicada)obj;

		long primaryKey = lojaIndicada.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LojaIndicadaModelImpl lojaIndicadaModelImpl = this;

		lojaIndicadaModelImpl._originalUuid = lojaIndicadaModelImpl._uuid;

		lojaIndicadaModelImpl._originalCompanyId = lojaIndicadaModelImpl._companyId;

		lojaIndicadaModelImpl._setOriginalCompanyId = false;

		lojaIndicadaModelImpl._originalGroupId = lojaIndicadaModelImpl._groupId;

		lojaIndicadaModelImpl._setOriginalGroupId = false;

		lojaIndicadaModelImpl._originalIdLoja = lojaIndicadaModelImpl._idLoja;

		lojaIndicadaModelImpl._originalLojaIndicadaAtual = lojaIndicadaModelImpl._lojaIndicadaAtual;

		lojaIndicadaModelImpl._setOriginalLojaIndicadaAtual = false;

		lojaIndicadaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LojaIndicada> toCacheModel() {
		LojaIndicadaCacheModel lojaIndicadaCacheModel = new LojaIndicadaCacheModel();

		lojaIndicadaCacheModel.uuid = getUuid();

		String uuid = lojaIndicadaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			lojaIndicadaCacheModel.uuid = null;
		}

		lojaIndicadaCacheModel.lojaIndicadaId = getLojaIndicadaId();

		lojaIndicadaCacheModel.companyId = getCompanyId();

		lojaIndicadaCacheModel.groupId = getGroupId();

		lojaIndicadaCacheModel.createUserId = getCreateUserId();

		lojaIndicadaCacheModel.modifiedUserId = getModifiedUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			lojaIndicadaCacheModel.createDate = createDate.getTime();
		}
		else {
			lojaIndicadaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			lojaIndicadaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			lojaIndicadaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		lojaIndicadaCacheModel.idLoja = getIdLoja();

		String idLoja = lojaIndicadaCacheModel.idLoja;

		if ((idLoja != null) && (idLoja.length() == 0)) {
			lojaIndicadaCacheModel.idLoja = null;
		}

		lojaIndicadaCacheModel.lojaIndicadaAtual = getLojaIndicadaAtual();

		return lojaIndicadaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", lojaIndicadaId=");
		sb.append(getLojaIndicadaId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", idLoja=");
		sb.append(getIdLoja());
		sb.append(", lojaIndicadaAtual=");
		sb.append(getLojaIndicadaAtual());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append(
			"br.com.prodevelopment.lapidarios.lojaindicada.model.LojaIndicada");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lojaIndicadaId</column-name><column-value><![CDATA[");
		sb.append(getLojaIndicadaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idLoja</column-name><column-value><![CDATA[");
		sb.append(getIdLoja());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lojaIndicadaAtual</column-name><column-value><![CDATA[");
		sb.append(getLojaIndicadaAtual());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LojaIndicada.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LojaIndicada.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _lojaIndicadaId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _idLoja;
	private String _originalIdLoja;
	private Boolean _lojaIndicadaAtual;
	private Boolean _originalLojaIndicadaAtual;
	private boolean _setOriginalLojaIndicadaAtual;
	private long _columnBitmask;
	private LojaIndicada _escapedModel;
}